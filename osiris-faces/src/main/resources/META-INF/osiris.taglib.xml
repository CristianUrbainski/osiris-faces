<?xml version="1.0"?>
<facelet-taglib version="2.0"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee        http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd">
	<namespace>http://osiris.faces.com/ui/bootstrap</namespace>
	<tag>
		<tag-name>modal</tag-name>
		<component>
			<description>Componente Modal da biblioteca bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Modal</component-type>
			<renderer-type>com.osiris.component.bootstrap.ModalRenderer</renderer-type>
			<!-- <handler-class>com.osiris.component.bootstrap.modal.UIModalHandler</handler-class> -->
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Define se o modal deve exibir o botão fechar</description>
			<name>closeable</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>effect</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>title</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>widgetVar</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>width</name>
			<type>int</type>
		</attribute>
		<attribute>
			<name>minWidth</name>
			<type>int</type>
		</attribute>
		<attribute>
			<name>minHeight</name>
			<type>int</type>
		</attribute>
		<attribute>
			<name>visible</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>onOpen</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>onClose</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>modalFooter</tag-name>
		<component>
			<description>Componente do rodape do componente modal da biblioteca bootstrap</description>
			<component-type>com.osiris.component.bootstrap.ModalFooter</component-type>
			<renderer-type>com.osiris.component.bootstrap.ModalFooterRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>modalBody</tag-name>
		<component>
			<description>Componente do rodape do componente modal da biblioteca bootstrap</description>
			<component-type>com.osiris.component.bootstrap.ModalBody</component-type>
			<renderer-type>com.osiris.component.bootstrap.ModalBodyRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>menuBar</tag-name>
		<component>
			<description>Componente de menu inspirado no bootstrap</description>
			<component-type>com.osiris.component.bootstrap.MenuBar</component-type>
			<renderer-type>com.osiris.component.bootstrap.MenuBarRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>menuItem</tag-name>
		<component>
			<description>Componente de item de menu inspirado no bootstrap</description>
			<component-type>com.osiris.component.bootstrap.MenuItem</component-type>
			<renderer-type>com.osiris.component.bootstrap.MenuItemRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>active</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>label</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>location</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>menu</tag-name>
		<component>
			<description>Componente de item de menu inspirado no bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Menu</component-type>
			<renderer-type>com.osiris.component.bootstrap.MenuRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>label</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>subMenu</tag-name>
		<component>
			<description>Componente de item de menu inspirado no bootstrap</description>
			<component-type>com.osiris.component.bootstrap.SubMenu</component-type>
			<renderer-type>com.osiris.component.bootstrap.SubMenuRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>label</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>commandButton</tag-name>
		<component>
			<description>Componente de commandButton inspirado no bootstrap e no primefaces</description>
			<component-type>com.osiris.component.bootstrap.CommandButton</component-type>
			<renderer-type>com.osiris.component.bootstrap.CommandButtonRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>widgetVar</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>ajax</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>async</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>process</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>update</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>onstart</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>oncomplete</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>onerror</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>onsuccess</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>global</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>partialSubmit</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>icon</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>inline</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>escape</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>value</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>actionListener</name>
			<type>javax.el.MethodExpression</type>
		</attribute>
		<attribute>
			<name>action</name>
			<type>javax.el.MethodExpression</type>
		</attribute>
		<attribute>
			<name>scale</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>severity</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>prependField</tag-name>
		<component>
			<description>Componente de adicao de icone antes do campo inspirado no twitter bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Prepend</component-type>
			<renderer-type>com.osiris.component.bootstrap.PrependRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>icon</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>alert</tag-name>
		<component>
			<description>Componente de alerta inspirado no twitter bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Alert</component-type>
			<renderer-type>com.osiris.component.bootstrap.AlertRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Define se o modal deve exibir o botão fechar</description>
			<name>closeable</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>title</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>severity</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>message</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>formItem</tag-name>
		<component>
			<description>Componente de formItem com o estilo do Twitter Bootstrap</description>
			<component-type>com.osiris.component.bootstrap.FormItem</component-type>
			<renderer-type>com.osiris.component.bootstrap.FormItemRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>O id do componente para qual será atribuido o label.</description>
			<name>labelFor</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Label do componente.</description>
			<name>label</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Classe estilo CSS extra para o componente.</description>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Estilo CSS inline direto no componente.</description>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>well</tag-name>
		<component>
			<description>Componente container inspirado no twitter bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Well</component-type>
			<renderer-type>com.osiris.component.bootstrap.WellRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Classe estilo CSS extra para o componente.</description>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Estilo CSS inline direto no componente.</description>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>panel</tag-name>
		<component>
			<description>Componente panel inspirado no twitter bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Panel</component-type>
			<renderer-type>com.osiris.component.bootstrap.PanelRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Classe estilo CSS extra para o componente.</description>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Estilo CSS inline direto no componente.</description>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Titulo do componente.</description>
			<name>title</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Severity do componente.</description>
			<name>severity</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
</facelet-taglib>
