<?xml version="1.0"?>
<facelet-taglib version="2.0"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee        http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd">
	
	<namespace>http://osiris.faces.com/ui/bootstrap</namespace>
	
	<tag>
		<tag-name>prependField</tag-name>
		<component>
			<description>Componente de adicao de icone antes do campo inspirado no twitter bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Prepend</component-type>
			<renderer-type>com.osiris.component.bootstrap.PrependRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>icon</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>prependText</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>position</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>alert</tag-name>
		<component>
			<description>Componente de alerta inspirado no twitter bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Alert</component-type>
			<renderer-type>com.osiris.component.bootstrap.AlertRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Define se o modal deve exibir o botão fechar</description>
			<name>closeable</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<name>title</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>severity</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<name>message</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>formItem</tag-name>
		<component>
			<description>Componente de formItem com o estilo do Twitter Bootstrap</description>
			<component-type>com.osiris.component.bootstrap.FormItem</component-type>
			<renderer-type>com.osiris.component.bootstrap.FormItemRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>O id do componente para qual será atribuido o label.</description>
			<name>labelFor</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Label do componente.</description>
			<name>label</name>
			<required>true</required>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Estilo CSS inline direto no componente.</description>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Estilo para o label</description>
			<name>labelClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Estilo para os componentes internos</description>
			<name>controlClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Posição do label top ou left</description>
			<name>labelPosition</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>well</tag-name>
		<component>
			<description>Componente container inspirado no twitter bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Well</component-type>
			<renderer-type>com.osiris.component.bootstrap.WellRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Classe estilo CSS extra para o componente.</description>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Estilo CSS inline direto no componente.</description>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
	<tag>
		<tag-name>panel</tag-name>
		<component>
			<description>Componente panel inspirado no twitter bootstrap</description>
			<component-type>com.osiris.component.bootstrap.Panel</component-type>
			<renderer-type>com.osiris.component.bootstrap.PanelRenderer</renderer-type>
			<handler-class />
		</component>
		<attribute>
			<description>A expressão value binding usado para conectar este componente com uma propriedade de componente de uma classe JavaBean</description>
			<name>binding</name>
			<type>javax.faces.component.UIComponent</type>
		</attribute>
		<attribute>
			<description>O identificador para este componente. Este valor deve ser unico dentro do componente parente se este for um naming container.</description>
			<display-name>Identificador do componente</display-name>
			<name>id</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Flag indicando se este componente deve ou não ser renderizado. O valor padrão desta propriedade é true.</description>
			<display-name>Flag Rendered</display-name>
			<name>rendered</name>
			<type>boolean</type>
		</attribute>
		<attribute>
			<description>Classe estilo CSS extra para o componente.</description>
			<name>styleClass</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Estilo CSS inline direto no componente.</description>
			<name>style</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Titulo do componente.</description>
			<name>title</name>
			<type>java.lang.String</type>
		</attribute>
		<attribute>
			<description>Severity do componente.</description>
			<name>severity</name>
			<type>java.lang.String</type>
		</attribute>
	</tag>
</facelet-taglib>